<!DOCTYPE html>
<html lang="pl">
<head>
  <title>ReconApp</title>
  <link rel="stylesheet" href="css/style.css">
</head>
<body>
<h1>Rekonesans</h1>
<h2 id="overallProgress">Ogólny postęp:&nbsp;</h2>
<div class="progressSection">
  <input type="file" class="progressRow" id="dataProgress" accept=".json">
  <input type="submit" value="Załaduj postęp" class="progressRow progressButton" id="loadProgress">
  <input type="submit" value="Pobierz postęp" class="progressRow progressButton" id="saveProgress">
</div>
<table>
  <tbody id="topicsTable">
    <tr>
      <th>Temat</th>
      <th class="centered">Wejście</th>
      <th class="centered">Postęp</th>
    </tr>
  </tbody>
</table>
<%
if (result) {
  if (result.success && result.msg) {
    __append(`
        <script>
            window.addEventListener('DOMContentLoaded', () => {
                let Toast1 = Swal.mixin({
                    toast: true,
                    position: 'top-right',
                    iconColor: 'white',
                    customClass: {
                        popup: 'colored-toast'
                    },
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true
                })
                Toast1.fire({
                    icon: 'success',
                    title: \`${result.msg}\`
                            })
                        })
                        </script>
        `)
  } else if (result.msg) {
    __append(`
        <script>
            window.addEventListener('DOMContentLoaded', () => {
                let Toast1 = Swal.mixin({
                    toast: true,
                    position: 'top-right',
                    iconColor: 'white',
                    customClass: {
                        popup: 'colored-toast'
                    },
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true
                })
                Toast1.fire({
                    icon: 'error',
                    title: \`${result.msg}\`
                            })
                        })
                        </script>
        `)
  }
} %>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  window.addEventListener('DOMContentLoaded', () => {
    let data = <% __append(JSON.stringify(data)) %>;
    let table = document.getElementById('topicsTable');
    let overallScore = 0;
    // TODO: When module is finished, make it green :)
    for (let i = 0; i < data.length; i++) {
      overallScore += data[i].progress
      table.innerHTML += `
        <tr>
          <td>${i+1}. ${data[i].topic}</td>
          <td><a href="${(i+1).toString().padStart(2, "0")}"><div class="centered">Kliknij tutaj!</div></a></td>
          <td class="centered">${data[i].progress}/100</td>
        </tr>
      `
    }
    document.getElementById('overallProgress').innerText += (Math.round(100*overallScore/data.length)/100).toString()+"%"
    document.getElementById('saveProgress').addEventListener('click', () => {
      let b = document.createElement("a");
      b.style.display = "none";
      let a = new Blob([JSON.stringify(data)], {type: "octet/stream"});
      let url = window.URL.createObjectURL(a);
      b.href = url;
      b.download = "progress.json";
      b.click();
      window.URL.revokeObjectURL(url);
    })
    document.getElementById('loadProgress').addEventListener('click', () => {
      let fileToUpload = document.getElementById('dataProgress').files[0];
      let reader = new FileReader();
      reader.readAsText(fileToUpload, "UTF-8");
      reader.onload = function (evt) {
        fetch('/uploadProgress', {
          method: 'POST',
          headers: {
            'Content-type': 'application/json'
          },
          body: evt.target.result
        }).then(() => {
          location.href = "/";
        })
      }
    })
  })
</script>
</body>
</html>