<!DOCTYPE html>
<html lang="pl">
<head>
    <title>Architektura Aplikacji webowej</title>
    <link rel="stylesheet" href="css/style.css">
</head>
<body>
<a href="../">Powrót</a>
<h1>Architektura Aplikacji webowej</h1>
<p>czyli jak zaprojektowana jest aplikacja?</p>
<h2>Flagi</h2>
<div class="flagsContainer">
    <input type="text" placeholder="Tu wpisz znalezione flagi" class="flag__input" id="flag"><input type="submit" class="submitFlag__button" id="submitFlag">
</div>
<h2>
    Każda aplikacja internetowa posiada <b>front-end</b> oraz <b>back-end</b>.
</h2>
<p>
    <b>Front-end</b> jest znany również jako <b>strona klienta</b> aplikacji, ponieważ określa wszystko z czym użytkownik strony ma do czynienia.
    Główną rolą front-end'u jest pobieranie danych od użytkowników. Front-end jest operowany przez HTML, CSS oraz JavaScript.
</p>
<p>
    <b>Back-end</b> również znany jako <b>strona serwerowa</b> aplikacji, odpowiada za logikę aplikacji, użytkownik nie ma dostępu
    do tej części aplikacji webowej.
</p>

<input type="submit" class="clearTask__button" value="Kliknij by wyczyścić zadanie" id="clearTask">
<%
if (result) {
    if (result.success && result.msg) {
        __append(`
        <script>
            window.addEventListener('DOMContentLoaded', () => {
                let Toast1 = Swal.mixin({
                    toast: true,
                    position: 'top-right',
                    iconColor: 'white',
                    customClass: {
                        popup: 'colored-toast'
                    },
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true
                })
                Toast1.fire({
                    icon: 'success',
                    title: \`${result.msg}\`
                            })
                        })
                        </script>
        `)
    } else if (result.msg) {
        __append(`
        <script>
            window.addEventListener('DOMContentLoaded', () => {
                let Toast1 = Swal.mixin({
                    toast: true,
                    position: 'top-right',
                    iconColor: 'white',
                    customClass: {
                        popup: 'colored-toast'
                    },
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true
                })
                Toast1.fire({
                    icon: 'error',
                    title: \`${result.msg}\`
                            })
                        })
                        </script>
        `)
    }
} %>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    window.addEventListener('DOMContentLoaded', () => {
        document.getElementById('submitFlag').addEventListener('click', () => {
            let flagText = document.getElementById('flag').value;
            fetch('/02/submitTask',
                {
                    method: "POST",
                    headers: {
                        "Content-type": "application/json"
                    },
                    body: JSON.stringify({flag: flagText})
                }
                ).then(r => r.json()).then(res => {
                let result = res.result;
                if (result.success && result.msg) {
                    let Toast1 = Swal.mixin({
                        toast: true,
                        position: 'top-right',
                        iconColor: 'white',
                        customClass: {
                            popup: 'colored-toast'
                        },
                        showConfirmButton: false,
                        timer: 5000,
                        timerProgressBar: true
                    })
                    Toast1.fire({
                        icon: 'success',
                        title: result.msg
                    })
                } else if (result.msg) {
                    let Toast1 = Swal.mixin({
                        toast: true,
                        position: 'top-right',
                        iconColor: 'white',
                        customClass: {
                            popup: 'colored-toast'
                        },
                        showConfirmButton: false,
                        timer: 5000,
                        timerProgressBar: true
                    })
                    Toast1.fire({
                        icon: 'error',
                        title: result.msg
                    })
                }
            })

        })
        document.getElementById('clearTask').addEventListener('click', () => {
            fetch('/02/clearTask', {method: "POST"}).then(r => r.json()).then(res => {
                let result = res.result;
                if (result.success && result.msg) {
                    let Toast1 = Swal.mixin({
                        toast: true,
                        position: 'top-right',
                        iconColor: 'white',
                        customClass: {
                            popup: 'colored-toast'
                        },
                        showConfirmButton: false,
                        timer: 5000,
                        timerProgressBar: true
                    })
                    Toast1.fire({
                        icon: 'success',
                        title: result.msg
                    })
                } else if (result.msg) {
                    let Toast1 = Swal.mixin({
                        toast: true,
                        position: 'top-right',
                        iconColor: 'white',
                        customClass: {
                            popup: 'colored-toast'
                        },
                        showConfirmButton: false,
                        timer: 5000,
                        timerProgressBar: true
                    })
                    Toast1.fire({
                        icon: 'error',
                        title: result.msg
                    })
                }
            })
        })
    })
</script>
</body>
</html>